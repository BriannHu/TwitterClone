{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blphu\\\\Personal Projects\\\\github\\\\tweet_app\\\\tweet_app-web\\\\src\\\\profiles\\\\components.js\";\nimport React from 'react';\nexport function UserLink(props) {\n  const {\n    username\n  } = props;\n\n  const handleUserLink = event => {\n    window.location.href = `/profiles/${username}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pointer\",\n    onClick: handleUserLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, props.children);\n}\nexport function UserDisplay(props) {\n  const {\n    user,\n    includeFullName\n  } = props;\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, nameDisplay, /*#__PURE__*/React.createElement(UserLink, {\n    username: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"@\", user.username));\n}\nexport function UserPicture(props) {\n  const {\n    user\n  } = props;\n  return /*#__PURE__*/React.createElement(UserLink, {\n    username: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 45\n    }\n  }, user.username[0]));\n}","map":{"version":3,"sources":["C:/Users/blphu/Personal Projects/github/tweet_app/tweet_app-web/src/profiles/components.js"],"names":["React","UserLink","props","username","handleUserLink","event","window","location","href","children","UserDisplay","user","includeFullName","nameDisplay","first_name","last_name","UserPicture"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;;AACA,QAAME,cAAc,GAAIC,KAAD,IAAW;AAChCC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAYL,QAAS,EAA5C;AACD,GAFD;;AAGA,sBAAO;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFF,KAAK,CAACO,QADJ,CAAP;AAGD;AAED,OAAO,SAASC,WAAT,CAAqBR,KAArB,EAA2B;AAChC,QAAM;AAACS,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAA0BV,KAAhC;AACA,QAAMW,WAAW,GAAGD,eAAe,KAAK,IAApB,GAA4B,GAAED,IAAI,CAACG,UAAW,IAAGH,IAAI,CAACI,SAAU,GAAhE,GAAqE,IAAzF;AACA,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJF,WADI,eAEL,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,IAAI,CAACR,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCQ,IAAI,CAACR,QAA1C,CAFK,CAAP;AAID;AAED,OAAO,SAASa,WAAT,CAAsBd,KAAtB,EAA6B;AAClC,QAAM;AAACS,IAAAA;AAAD,MAAST,KAAf;AACA,sBAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAES,IAAI,CAACR,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmC;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACzCQ,IAAI,CAACR,QAAL,CAAc,CAAd,CADyC,CAAnC,CAAP;AAGD","sourcesContent":["import React from 'react'\r\n\r\nexport function UserLink (props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href= `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n      {props.children}\r\n  </span>\r\n}\r\n\r\nexport function UserDisplay(props){\r\n  const {user, includeFullName} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    <UserLink username={user.username}>@{user.username}</UserLink>\r\n  </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n  const {user} = props\r\n  return <UserLink username={user.username}><span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n  {user.username[0]}\r\n  </span></UserLink>\r\n}"]},"metadata":{},"sourceType":"module"}