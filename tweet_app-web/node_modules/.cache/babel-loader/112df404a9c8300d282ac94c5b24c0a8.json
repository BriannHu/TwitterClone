{"ast":null,"code":"import _wrapRegExp from \"C:\\\\Users\\\\blphu\\\\Personal Projects\\\\github\\\\tweet_app\\\\tweet_app-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapRegExp\";\nvar _jsxFileName = \"C:\\\\Users\\\\blphu\\\\Personal Projects\\\\github\\\\tweet_app\\\\tweet_app-web\\\\src\\\\tweets\\\\detail.js\";\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11 mx-auto p-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 text-muted small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, \"Retweet\"), /*#__PURE__*/React.createElement(Tweet, {\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }))) : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet,\n    didRetweet,\n    hideActions\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  const path = window.location.pathname;\n  const match = path.match( /*#__PURE__*/_wrapRegExp(/([0-9]+)/, {\n    tweetid: 1\n  }));\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, tweet.user.first_name, tweet.user.last_name, \"@\", tweet.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, tweet.content), /*#__PURE__*/React.createElement(ParentTweet, {\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, actionTweet && hideActions !== true && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), isDetail === true ? null : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-primary\",\n    onClick: handleLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 39\n    }\n  }, \"View\")));\n}","map":{"version":3,"sources":["C:/Users/blphu/Personal Projects/github/tweet_app/tweet_app-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","ParentTweet","props","tweet","parent","Tweet","didRetweet","hideActions","actionTweet","setActionTweet","className","path","window","location","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","event","preventDefault","href","handlePerformAction","newActionTweet","status","user","first_name","last_name","username","content","type","display"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n    <p className='mb-0 text-muted small'>Retweet</p>\r\n    <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null\r\n  }\r\n    \r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet) {\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n      }\r\n      return <div className={className}>\r\n        <div>\r\n          <p>\r\n            {tweet.user.first_name}\r\n            {tweet.user.last_name}\r\n            @{tweet.user.username}\r\n          </p>\r\n          <p>{tweet.content}</p>\r\n          <ParentTweet tweet={tweet} />\r\n        </div>\r\n        <div className='btn btn-group'>\r\n        {(actionTweet && hideActions !== true) && <React.Fragment>\r\n          <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display: \"Likes\"}} />\r\n          <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display: \"Unlike\"}} />\r\n          <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display: \"Retweet\"}} />\r\n          </React.Fragment>\r\n        }\r\n          {isDetail === true ? null : <button className='btn btn-outline-primary' onClick={handleLink}>View</button>}\r\n        </div> \r\n      </div> \r\n    }"]},"metadata":{},"sourceType":"module"}