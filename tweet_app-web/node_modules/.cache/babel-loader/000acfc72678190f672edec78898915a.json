{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blphu\\\\Personal Projects\\\\github\\\\tweet_app\\\\tweet_app-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 12312\n    });\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-auto col-10 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetsList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }));\n}\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]); //setTweetsInit([...props.newTweets].concat(tweetsInit))\n\n  useEffect(() => {\n    let final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweetsInit]);\n  useEffect(() => {\n    const myCallBack = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was an error.\");\n      }\n    };\n\n    loadTweets(myCallBack);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"mx-auto col-10 my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-outline-primary btn-small';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/blphu/Personal Projects/github/tweet_app/tweet_app-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","final","concat","length","myCallBack","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {loadTweets} from '../lookup'\r\n\r\nexport function TweetsComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift({\r\n            content: newVal,\r\n            likes: 0,\r\n            id: 12312\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <div className='mx-auto col-10 mb-3'>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required className='form-control' name='tweet'>\r\n\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n        </div>\r\n        <TweetsList newTweets={newTweets}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    //setTweetsInit([...props.newTweets].concat(tweetsInit))\r\n    useEffect(() => {\r\n        let final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweetsInit])\r\n    useEffect(() => {\r\n      const myCallBack = (response, status) => {\r\n        if (status === 200) {\r\n            setTweetsInit(response)\r\n        } else {\r\n          alert(\"There was an error.\")\r\n        }\r\n      }\r\n      loadTweets(myCallBack)\r\n    }, [])\r\n    return tweets.map((item, index) => {\r\n      return <Tweet tweet={item} className='mx-auto col-10 my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })\r\n  }\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-outline-primary btn-small'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if (action.type === 'like') {\r\n            if (userLike === true) {\r\n                setLikes(likes-1)\r\n                setUserLike(false)\r\n            } else {    \r\n                setLikes(likes+1)\r\n                setUserLike(true)\r\n            }\r\n        }\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>{tweet.id} - {tweet.content}</p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type: \"like\", display: \"Likes\"}} />\r\n        <ActionBtn tweet={tweet} action={{type: \"unlike\", display: \"Unlike\"}} />\r\n        <ActionBtn tweet={tweet} action={{type: \"retweet\", display: \"Retweet\"}} />\r\n      </div>\r\n    </div>\r\n  }"]},"metadata":{},"sourceType":"module"}