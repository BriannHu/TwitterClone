{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blphu\\\\Personal Projects\\\\github\\\\tweet_app\\\\tweet_app-web\\\\src\\\\tweets\\\\components.js\";\nimport React from 'react';\nexport function loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = \"GET\"; // as opposed to 'POST'\n\n  const url = \"http://localhost:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send();\n}\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallBack = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error.\");\n      }\n    };\n\n    loadTweets(myCallBack);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"mx-auto col-10 my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-outline-primary btn-small';\n  return action.type === 'like' ? /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, \" \", tweet.likes, \" Likes\") : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/blphu/Personal Projects/github/tweet_app/tweet_app-web/src/tweets/components.js"],"names":["React","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","TweetsList","props","tweets","setTweets","useState","useEffect","myCallBack","alert","map","item","index","ActionBtn","tweet","action","className","type","likes","Tweet","id","content"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport function loadTweets (callback) {\r\n    const xhr = new XMLHttpRequest()\r\n    const method = \"GET\" // as opposed to 'POST'\r\n    const url = \"http://localhost:8000/api/tweets/\"\r\n    const responseType = \"json\"\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function () {\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n      console.log(e)\r\n      callback({\"message\": \"The request was an error\"}, 400)\r\n    }\r\n    xhr.send()\r\n  }\r\n\r\nexport function TweetsList(props) {\r\n    const [tweets, setTweets] = useState([])\r\n  \r\n    useEffect(() => {\r\n      const myCallBack = (response, status) => {\r\n        if (status === 200) {\r\n          setTweets(response)\r\n        } else {\r\n          alert(\"There was an error.\")\r\n        }\r\n      }\r\n      loadTweets(myCallBack)\r\n    }, [])\r\n    return tweets.map((item, index) => {\r\n      return <Tweet tweet={item} className='mx-auto col-10 my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })\r\n  }\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action} = props\r\n    const className = props.className ? props.className : 'btn btn-outline-primary btn-small'\r\n    return action.type === 'like' ? <button className={className}> {tweet.likes} Likes</button> : null\r\n  }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>{tweet.id} - {tweet.content}</p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type: \"like\"}} />\r\n        <ActionBtn tweet={tweet} action={{type: \"unlike\"}} />\r\n  \r\n      </div>\r\n    </div>\r\n  }"]},"metadata":{},"sourceType":"module"}