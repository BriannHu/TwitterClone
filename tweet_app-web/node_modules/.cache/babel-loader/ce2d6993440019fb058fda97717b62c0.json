{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blphu\\\\Personal Projects\\\\github\\\\tweet_app\\\\tweet_app-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useState } from 'react';\nimport { TweetsList } from './list';\nimport { apiTweetCreate } from './lookup';\n\nfunction TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const {\n    didTweet\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    if (status === 201) {\n      didTweet(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured, please try again.\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Tweet\")));\n}\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured, please try again.\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(TweetCreate, {\n    className: \"mx-auto col-10 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(TweetsList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/blphu/Personal Projects/github/tweet_app/tweet_app-web/src/tweets/components.js"],"names":["React","useState","TweetsList","apiTweetCreate","TweetCreate","props","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","tempNewTweets","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsComponent","newTweets","setNewTweets","canTweet","unshift"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nfunction TweetCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) => {\r\n      // backend api response handler\r\n      if (status === 201) {\r\n        didTweet(tempNewTweets)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured, please try again.\")\r\n      }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n    <form onSubmit={handleSubmit}>\r\n        <textarea ref={textAreaRef} required className='form-control' name='tweet'>\r\n\r\n        </textarea>\r\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n    </form>\r\n</div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleBackendUpdate = (response, status) => {\r\n      // backend api response handler\r\n      let tempNewTweets = [...newTweets]\r\n      if (status === 201) {\r\n        tempNewTweets.unshift(response)\r\n        setNewTweets(tempNewTweets)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured, please try again.\")\r\n      }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate className='mx-auto col-10 my-3' /> }\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}